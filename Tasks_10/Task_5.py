"""
5. Ленивая функция.
Дано: цело число n.

Задание: написать функцию-генератор, которая будет "лениво" возвращать
значения от 0 до n, определенные следующими правилами.

Если
 x == 0 -> -10
 x % 3 -> 45
 x % 5 -> (x / 5) + 93

Иначе
 -> x / 2

Пример:
 n = 3, результат: list(f(n)) == [-10, 45, 45, 93.6]
 n = 3, результат: list(f(n)) == [-10, 45, 45, 93.6, 45, 45, 94.2, 45]
"""


def return_values_according_to_the_rules(n: int) -> iter:
    """
    Функцию-генератор, которая "лениво" возвращает значения от 0 до n,
    определенные соответствующими правилами.
    :param n: Число, которым будет заканчиваться последовательность.
    :return: Итератор.
    """
    for i in range(n + 1):
        if i == 0:
            temp = -10
        elif i % 3 == 0:
            temp = 45
        elif i % 5 == 0:
            temp = (i / 5) + 93
        else:
            temp = i / 2

            # Если получили целое число, уберем ненужные нули после запятой
            if temp % 1 == 0:
                temp = int(temp)

        yield temp


def do_main():
    gen = return_values_according_to_the_rules(7)
    for x in gen:
        print(x, end=' ')


if __name__ == '__main__':
    do_main()
